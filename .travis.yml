language: generic
sudo: required
services:
  - docker
env:
 - FROM=debian:testing TEST_SUITE=user CMAKE_FLAGS=
 - FROM=debian:testing TEST_SUITE=user CMAKE_FLAGS="-DWITH_DOC=OFF -DWITH_CURL=OFF"
 - FROM=debian:testing TEST_SUITE=root CMAKE_FLAGS=-DWITH_DOC=OFF
install:
 - echo "FROM $FROM" > Dockerfile
 - echo "RUN apt-get update" >> Dockerfile
 - echo "RUN ./prepare-release travis-ci" >> Dockerfile
 - docker build --tag=apt-ci .
before_script:
 - docker run --rm -w $PWD --mount type=bind,src=/home/travis/,dst=/home/travis/ apt-ci sh -c "mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Coverage -G Ninja $CMAKE_FLAGS .."
 - docker run --rm -w $PWD --mount type=bind,src=/home/travis/,dst=/home/travis/ apt-ci ninja -C build
script:
 - docker run --rm -w $PWD --mount type=bind,src=/home/travis/,dst=/home/travis/ apt-ci env CTEST_OUTPUT_ON_FAILURE=1 ninja -C build test
 - docker run --rm -w $PWD --mount type=bind,src=/home/travis/,dst=/home/travis/ apt-ci env DESTDIR=$PWD/rootdir chronic ninja -C build install
 - test "$TEST_SUITE" != "user"  || docker run --rm -w $PWD --mount type=bind,src=/home/travis/,dst=/home/travis/ apt-ci ./test/integration/run-tests -qq
after_script:
 - cd build
 - gcov -r $(find -name '*.gcno')
 - bash <(curl -s https://codecov.io/bash)
